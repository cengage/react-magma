# name: Build and Publish Docs for old versions
# # for testing CI on local machine use with act run >> act push -W .github/workflows/publish-old-local.yml
# on:
#   push:
#     branches:
#       - chore/deployOldDocs

# jobs:
#   build-and-publish:
#     runs-on: ubuntu-latest

#     strategy:
#       fail-fast: false
#       matrix:
#         version: ['2.6.0']

#     steps:
#       - name: Setup for ACT
#         run: |
#           apt-get update && apt-get install sudo -y
#       - name: Install ACT dependencies
#         run: |
#           sudo apt-get install git jq -y

#       - name: Clone Repository
#         run: |
#           git clone https://github.com/cengage/react-magma.git .
#           git fetch --tags
#           git checkout react-magma-dom@${{ matrix.version }} || echo "Tag not found, continuing with main branch"

#       - name: Setup Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '18'
#           check-latest: true
#       - name: Check Node version
#         run: node -v
#       - name: Update NPM version
#         run: npm install -g "npm@^7.6.3"
#       - name: Update Node Options
#         run: |
#           echo "NODE_OPTIONS=--openssl-legacy-provider" >> $GITHUB_ENV
#       - name: Update tsconfig.json for docs build
#         run: |
#           cp tsconfig.json tsconfig.json.backup

#           # Update tsconfig.json with more permissive settings
#           jq '.compilerOptions += {
#             "skipLibCheck": true,
#             "strict": false,
#             "noImplicitAny": false,
#             "strictNullChecks": false,
#             "suppressImplicitAnyIndexErrors": true,
#             "noStrictGenericChecks": true,
#             "suppressExcessPropertyErrors": true,
#             "noUnusedLocals": false,
#             "noUnusedParameters": false,
#             "noImplicitReturns": false,
#             "declaration": false
#           }' tsconfig.json > tsconfig.temp.json && mv tsconfig.temp.json tsconfig.json

#           echo "Updated tsconfig.json for documentation build"
#           cat tsconfig.json

#       - name: Install Dependencies
#         run: npm i --no-audit --no-fund --legacy-peer-deps

#       - name: Patch Missing _styled Export
#         run: |
#           # Path to the problematic file
#           FILE_PATH="packages/react-magma-dom/dist/esm/index.js"

#           if [ -f "$FILE_PATH" ]; then
#             echo "Found file $FILE_PATH, applying patch..."

#             # Make a backup
#             cp "$FILE_PATH" "$FILE_PATH.bak"

#             # Create a temporary file containing the new content
#             # First add the import, then include original content
#             echo "import styled from '@emotion/styled';" > temp_file
#             echo "const _styled = styled;" >> temp_file
#             cat "$FILE_PATH" >> temp_file

#             # Replace original file with the patched version
#             mv temp_file "$FILE_PATH"

#             echo "File patched successfully"
#           else
#             echo "File $FILE_PATH not found"
#           fi

#       - name: install gatsby cli
#         run: npm install -g gatsby-cli@2.19.0

#       - name: Build Docs
#         run: |
#           cd website/react-magma-docs
#           CI=false SKIP_PREFLIGHT_CHECK=true DISABLE_ESLINT_PLUGIN=true gatsby build --verbose --prefix-paths || true

#         env:
#           PATH_PREFIX: /version/${{ matrix.version }}

#       - name: Configure NPM
#         run: |
#           git config --global user.name 'github-bot'
#           git config --global user.email 'github-bot@users.noreply.github.com'
#           echo //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} > .npmrc
#       - name: Get Alias
#         id: info
#         run: |
#           echo "::set-output name=alias::$(npm run --silent getAlias)"
#           echo "::set-output name=version::$(npm run --silent getVersion)"

#       - name: Deploy Docs to Netlify
#         uses: nwtgck/actions-netlify@v1.1
#         with:
#           publish-dir: './website/react-magma-docs/public'
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           deploy-message: 'Deploy from GitHub Actions'
#           enable-pull-request-comment: true
#           enable-commit-comment: true
#           overwrites-pull-request-comment: true
#           alias: ${{ matrix.version }}
#         env:
#           NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#           NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
